[{"/home/waqashsn/coding_projects/react_learn/src/App.js":"1","/home/waqashsn/coding_projects/react_learn/src/index.js":"2","/home/waqashsn/coding_projects/react_learn/src/components/Search.js":"3","/home/waqashsn/coding_projects/react_learn/src/components/Show.js":"4","/home/waqashsn/coding_projects/react_learn/src/components/SearchResults.js":"5","/home/waqashsn/coding_projects/react_learn/src/reportWebVitals.js":"6","/home/waqashsn/coding_projects/react_learn/src/components/ShowModal.js":"7"},{"size":4038,"mtime":1608411000669,"results":"8","hashOfConfig":"9"},{"size":559,"mtime":1606963786159,"results":"10","hashOfConfig":"9"},{"size":1035,"mtime":1607285138308,"results":"11","hashOfConfig":"9"},{"size":7100,"mtime":1608422199719,"results":"12","hashOfConfig":"9"},{"size":488,"mtime":1607288821638,"results":"13","hashOfConfig":"9"},{"size":362,"mtime":1606498851697,"results":"14","hashOfConfig":"9"},{"size":3115,"mtime":1608430658389,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1oqkj0q",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/waqashsn/coding_projects/react_learn/src/App.js",["32"],"import React from 'react';\r\nimport Search from './components/Search';\r\nimport Show from './components/Show';\r\nimport SearchResults from './components/SearchResults';\r\nimport ShowModal from './components/ShowModal';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleDetails = this.handleDetails.bind(this);\r\n    this.handleCloseDetails = this.handleCloseDetails.bind(this);\r\n    this.state = {\r\n      keyword: undefined,\r\n      shows: [],\r\n      error: undefined,\r\n      showModal: undefined\r\n      \r\n    }\r\n  }\r\n\r\n  handleSearch(searchKeyword) {\r\n    const apiUrl = 'https://api.tvmaze.com/search/shows?q=' + encodeURI(searchKeyword);\r\n    fetch(apiUrl)\r\n    .then((response) => response.json())\r\n    .then((searchResults) => {\r\n      if(searchResults.length > 0){\r\n        console.log(\"Keyword: \", searchKeyword);\r\n        console.log(searchResults);\r\n        this.setState(() => {\r\n          return {\r\n              keyword: searchKeyword,\r\n              shows: searchResults\r\n            }\r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  handleDetails(showdata){\r\n    console.log(showdata);\r\n    if(!!showdata){\r\n      this.setState(()=> {\r\n        return {\r\n          showModal: showdata\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleCloseDetails(){\r\n    this.setState(()=>{\r\n      return {\r\n        showModal: undefined\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // componentDidMount() {\r\n  //   const apiUrl = 'http://api.tvmaze.com/search/shows?q=' + encodeURI(this.state.keyword);\r\n  //   fetch(apiUrl)\r\n  //   .then((response )=> response.json())\r\n  //   .then((searchResults) =>  {\r\n  //     if(searchResults.length > 0){\r\n  //       this.setState(() => {\r\n  //           console.log(\"KEYWORD: \", encodeURI(this.state.keyword));\r\n  //           console.log(searchResults);\r\n  //           return {\r\n  //             shows: searchResults\r\n  //           }\r\n  //       })\r\n\r\n  //     } else {\r\n  //       this.setState(() => {\r\n  //         return {\r\n  //           error: \"No movies found with that keyword\"\r\n  //         }\r\n  //       })\r\n  //     }\r\n        \r\n  //   }); \r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search handleSearch={this.handleSearch} />\r\n        {this.state.shows.length > 0 ? <SearchResults searchResults={this.state.shows} handleDetails={this.handleDetails} /> : <p>No</p>}\r\n        <ShowModal ShowModal={this.state.showModal} handleCloseDetails={this.handleCloseDetails} />\r\n      </div>\r\n    )\r\n    // if (this.state.error) {\r\n    //   return (\r\n    //     <p>Error: No movies found</p>\r\n    //   )\r\n    // } else {\r\n    //   return (\r\n    //     <div>\r\n    //       {this.state.shows.length > 0 && this.state.shows.map((showObj) => <p>{showObj.show.name}</p>)}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n// class Counter extends React.Component {\r\n  \r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleReset = this.handleReset.bind(this);\r\n//     this.handleIncrement = this.handleIncrement.bind(this);\r\n//     this.handleDecrement = this.handleDecrement.bind(this);\r\n//     this.state = {\r\n//       count: 0\r\n//     }\r\n//   }\r\n\r\n//   handleIncrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count + 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleDecrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count - 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleReset() {\r\n//     this.setState(() => {\r\n//       return {\r\n//         count: 0\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state)\r\n//     return (\r\n//       <div>\r\n//         <h1>Count:{this.state.count}</h1>\r\n//         <button onClick={this.handleIncrement}>+1</button>\r\n//         <button onClick={this.handleDecrement}>-1</button>\r\n//         <button onClick={this.handleReset}>Reset</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// export default Counter;","/home/waqashsn/coding_projects/react_learn/src/index.js",["33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Show from './components/Show'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App keyword=\"game thrones\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/waqashsn/coding_projects/react_learn/src/components/Search.js",[],"/home/waqashsn/coding_projects/react_learn/src/components/Show.js",["34"],"/home/waqashsn/coding_projects/react_learn/src/components/SearchResults.js",["35"],"/home/waqashsn/coding_projects/react_learn/src/reportWebVitals.js",[],"/home/waqashsn/coding_projects/react_learn/src/components/ShowModal.js",["36","37","38","39","40"],{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":44,"column":29,"nodeType":"47","endLine":44,"endColumn":66},{"ruleId":"48","severity":1,"message":"49","line":8,"column":21,"nodeType":"50","messageId":"51","endLine":8,"endColumn":61},{"ruleId":"52","severity":1,"message":"53","line":42,"column":25,"nodeType":"47","endLine":42,"endColumn":69},{"ruleId":"45","severity":1,"message":"54","line":45,"column":25,"nodeType":"47","endLine":45,"endColumn":98},{"ruleId":"55","severity":1,"message":"56","line":56,"column":107,"nodeType":"57","endLine":56,"endColumn":122},{"ruleId":"55","severity":1,"message":"56","line":65,"column":106,"nodeType":"57","endLine":65,"endColumn":121},{"ruleId":"55","severity":1,"message":"56","line":66,"column":63,"nodeType":"57","endLine":66,"endColumn":78},"no-unused-vars","'Show' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]