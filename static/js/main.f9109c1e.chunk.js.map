{"version":3,"sources":["components/Search.js","components/Show.js","components/SearchResults.js","components/ShowModal.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","handleSearchSubmit","bind","e","preventDefault","keyword","target","elements","search_keyword","value","trim","this","handleSearch","className","onSubmit","type","placeholder","name","React","Component","Show","handleDetailsModal","handleDetails","show","onClick","image","src","medium","alt","genres","map","genre","premiered","status","summary","substr","replace","SearchResults","searchResults","result","index","handleCloseDetails","ShowModal","style","overlay","backgroundColor","content","height","width","position","margin","padding","boxShadow","border","ariaHideApp","isOpen","onRequestClose","contentLabel","original","href","color","float","fontFamily","textDecoration","runtime","officialSite","url","App","state","undefined","shows","error","showModal","searchKeyword","apiUrl","encodeURI","fetch","then","response","json","length","console","log","setState","showdata","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9109c1e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        \n    }\n\n    handleSearchSubmit(e) {\n        e.preventDefault();\n        const keyword = e.target.elements.search_keyword.value.trim();\n        this.props.handleSearch(keyword);\n    }\n\n    render() {\n        return (\n            <div className=\"input-wrapper\">\n                <form onSubmit={this.handleSearchSubmit}>\n                    <input type=\"text\" placeholder=\"Search...\" name=\"search_keyword\" />\n                    {/* <button>Search</button> */}\n                </form>\n            </div>\n        );\n    }\n\n}\n\n\n\n// const Search = (props) => {\n//     return (\n//         <div>\n//             <form>\n//                 <input type=\"text\" name=\"search_keyword\" />\n//                 <button type=\"submit\" onClick={this.handleSearchSubmit}>Search</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n\nexport default Search;","import React from 'react';\r\n\r\nclass Show extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.handleDetailsModal = this.handleDetailsModal.bind(this);\r\n    }\r\n\r\n    handleDetailsModal(e){\r\n        e.preventDefault();\r\n        this.props.handleDetails(this.props.show)\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n        <div onClick={this.handleDetailsModal} className=\"flex_container__item\">\r\n            <div className=\"card\">\r\n                {/* <p>{props.show.name}</p> */}\r\n                <div className=\"card_left\">\r\n                    {this.props.show.image ? <img src={this.props.show.image.medium} alt={this.props.show.name} /> : <span></span>}\r\n                    \r\n                </div>\r\n                <div className=\"card_right\">\r\n                    <h1>{this.props.show.name}</h1>\r\n                    <div className=\"card_right__details\">\r\n                        <ul>\r\n                            {this.props.show.genres.map((genre)=> <li>{genre}</li>)}\r\n                        </ul>\r\n                        <div className=\"card_right__extradetails\">\r\n                            <ul>\r\n                                <li key=\"premiered\">\r\n                                    Premiered: {this.props.show.premiered}\r\n                                </li>\r\n                                <li key=\"status\">\r\n                                    Status: {this.props.show.status}\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                        \r\n                        <div className=\"card_right__summary\">\r\n                            { this.props.show.summary ? <p>{this.props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\r\n                            <a onClick={this.handleDetailsModal}>Details</a>\r\n                        </div>\r\n                        {/* <div className=\"card_right__button\">\r\n                            <a>Details</a>\r\n                        </div> */}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\n// const Show = (props) => {\r\n//     console.log(props.show)\r\n//     return (\r\n//         <div className=\"flex_container__item\">\r\n//             <div className=\"card\">\r\n//                 {/* <p>{props.show.name}</p> */}\r\n//                 <div className=\"card_left\">\r\n//                     {props.show.image ? <img src={props.show.image.medium} alt={props.show.name} /> : <span></span>}\r\n                    \r\n//                 </div>\r\n//                 <div className=\"card_right\">\r\n//                     <h1>{props.show.name}</h1>\r\n//                     <div className=\"card_right__details\">\r\n//                         <ul>\r\n//                             {props.show.genres.map((genre)=> <li>{genre}</li>)}\r\n//                         </ul>\r\n//                         <div className=\"card_right__extradetails\">\r\n//                             <ul>\r\n//                                 <li>\r\n//                                     Premiered: {props.show.premiered}\r\n//                                 </li>\r\n//                                 <li>\r\n//                                     Status: {props.show.status}\r\n//                                 </li>\r\n//                             </ul>\r\n\r\n//                         </div>\r\n                        \r\n//                         <div className=\"card_right__summary\">\r\n//                             { props.show.summary ? <p>{props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\r\n//                             <a>Details</a>\r\n//                         </div>\r\n//                         {/* <div className=\"card_right__button\">\r\n//                             <a>Details</a>\r\n//                         </div> */}\r\n                        \r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// class Show extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             showId: this.props.showId,\r\n//             title: undefined,\r\n//             summaryTrimmed: undefined,\r\n//             summaryFull: undefined,\r\n//             premiered: undefined,\r\n//             image: {\r\n//                 medium: undefined,\r\n//                 large: undefined\r\n//             },\r\n//             genres: [],\r\n//             runtime: undefined,\r\n//             status: undefined,\r\n//             officialSite: undefined,\r\n//             network: undefined,\r\n            \r\n//         }\r\n//     }\r\n\r\n//     getShortSummary(){\r\n//         console.log(this);\r\n//         return this.state.summary.substr(0, 100)\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//        const apiUrl = 'http://api.tvmaze.com/shows/' + this.props.showId;\r\n//        fetch(apiUrl)\r\n//         .then((response )=> response.json())\r\n//         .then((data) =>  {\r\n//             this.setState(() => {\r\n//                 // console.log(data);\r\n//                 return {\r\n//                     title: data.name,\r\n//                     summaryTrimmed: data.summary.substr(0, 240) + \"...\",\r\n//                     summaryFull: data.summary,\r\n//                     premiered: data.premiered,\r\n//                     image: {\r\n//                         medium: data.image.medium,\r\n//                         large: data.image.large\r\n//                     },\r\n//                     genres: data.genres,\r\n//                     runtime: data.runtime,\r\n//                     status: data.status,\r\n//                     officialSite: data.OfficialSite,\r\n//                     network: data.network.name\r\n//                 }\r\n//             })\r\n//         });\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"card\">\r\n//                 <div className=\"card_left\">\r\n//                     <img src={this.state.image.medium} alt={this.state.title} />\r\n//                 </div>\r\n//                 <div className=\"card_right\">\r\n//                     <h1>{this.state.title}</h1>\r\n//                     <div className=\"card_right__details\">\r\n//                         <ul>\r\n//                             {this.state.genres.map((genre)=> <li>{genre}</li>)}\r\n//                         </ul>\r\n//                         <div className=\"card_right__extradetails\">\r\n//                             <ul>\r\n//                                 <li>\r\n//                                     Premiered: {this.state.premiered}\r\n//                                 </li>\r\n//                                 <li>\r\n//                                     Status: {this.state.status}\r\n//                                 </li>\r\n//                             </ul>\r\n\r\n//                         </div>\r\n                        \r\n//                         <div className=\"card_right__summary\">\r\n//                             <p>{this.state.summaryTrimmed}</p>\r\n//                         </div>\r\n                        \r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Show;","import Show from './Show';\n\nconst SearchResults = (props) => {\n    return (\n        <div className=\"flex_container\">\n            {\n                props.searchResults.map((result, index) => {\n                    {/* return <p>{result.show.name}</p> */}\n                    return <Show key={index} show={result.show} handleDetails={props.handleDetails} handleCloseDetails={props.handleCloseDetails} />\n                })\n            }\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst ShowModal = (props) => {\r\n\r\n    const modalStyles = {\r\n        overlay: {\r\n            backgroundColor: 'rgba(222, 222, 222, 0.8)'\r\n        },\r\n        content: {\r\n            backgroundColor: '',\r\n            height: '400px',\r\n            width: '800px',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            padding: '0',\r\n            boxShadow: '0px 20px 30px 3px rgba(0, 0, 0, 0.55)',\r\n            border: 'none'\r\n            \r\n        }\r\n    }\r\n\r\n    const closeButtonStyles = {\r\n        color: 'gray',\r\n        float: 'right', \r\n        padding: '10px',\r\n        fontFamily: 'sans-serif',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n    if (!props.ShowModal){\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n        \r\n            <div>\r\n                <Modal style={modalStyles} ariaHideApp={false} isOpen={!!props.ShowModal} onRequestClose={props.handleCloseDetails} contentLabel=\"Selected Show\">\r\n                <div className='largecard'>\r\n                    <div className='largecard_left'>\r\n                        <img src={props.ShowModal.image.original} />\r\n                    </div>\r\n                    <div className='largecard_right'>\r\n                        <a href=\"#\" onClick={props.handleCloseDetails} style={closeButtonStyles}>X</a>\r\n                        <h1>{props.ShowModal.name}</h1>\r\n                        <div className='largecard_right__details'>\r\n                            <ul>\r\n                                <li key=\"premiered\">Premiered: {props.ShowModal.premiered}</li>\r\n                                <li key=\"runtime\">{props.ShowModal.runtime} min</li>\r\n                                <li key=\"status\">{props.ShowModal.status}</li>\r\n                            </ul>\r\n                            \r\n                            <div className='largecard_right__review'>\r\n                                <p>{props.ShowModal.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")}</p>\r\n                                <a href='http://www.imdb.com/title/tt0266697/plotsummary?ref_=tt_stry_pl' target='_blank'>Read more</a>\r\n                            </div>\r\n                            <div>\r\n                                {/* <p>Genres:</p> */}\r\n                                <ul>\r\n                                {props.ShowModal.genres.map((genre)=> <li key={genre}>{genre}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                            <div className='largecard_right__button'>\r\n                                {!!props.ShowModal.officialSite ? <a href={props.ShowModal.officialSite} target='_blank'>Official Website</a> : <span></span>}\r\n                                <a href={props.ShowModal.url} target='_blank'>Full Details</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    {/* <button onClick={props.handleCloseDetails}>Close</button> */}\r\n                </Modal>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ShowModal;","import React from 'react';\r\nimport Search from './components/Search';\r\nimport Show from './components/Show';\r\nimport SearchResults from './components/SearchResults';\r\nimport ShowModal from './components/ShowModal';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleDetails = this.handleDetails.bind(this);\r\n    this.handleCloseDetails = this.handleCloseDetails.bind(this);\r\n    this.state = {\r\n      keyword: undefined,\r\n      shows: [],\r\n      error: undefined,\r\n      showModal: undefined\r\n      \r\n    }\r\n  }\r\n\r\n  handleSearch(searchKeyword) {\r\n    const apiUrl = 'https://api.tvmaze.com/search/shows?q=' + encodeURI(searchKeyword);\r\n    fetch(apiUrl)\r\n    .then((response) => response.json())\r\n    .then((searchResults) => {\r\n      if(searchResults.length > 0){\r\n        console.log(\"Keyword: \", searchKeyword);\r\n        console.log(searchResults);\r\n        this.setState(() => {\r\n          return {\r\n              keyword: searchKeyword,\r\n              shows: searchResults\r\n            }\r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  handleDetails(showdata){\r\n    console.log(showdata);\r\n    if(!!showdata){\r\n      this.setState(()=> {\r\n        return {\r\n          showModal: showdata\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleCloseDetails(){\r\n    this.setState(()=>{\r\n      return {\r\n        showModal: undefined\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // componentDidMount() {\r\n  //   const apiUrl = 'http://api.tvmaze.com/search/shows?q=' + encodeURI(this.state.keyword);\r\n  //   fetch(apiUrl)\r\n  //   .then((response )=> response.json())\r\n  //   .then((searchResults) =>  {\r\n  //     if(searchResults.length > 0){\r\n  //       this.setState(() => {\r\n  //           console.log(\"KEYWORD: \", encodeURI(this.state.keyword));\r\n  //           console.log(searchResults);\r\n  //           return {\r\n  //             shows: searchResults\r\n  //           }\r\n  //       })\r\n\r\n  //     } else {\r\n  //       this.setState(() => {\r\n  //         return {\r\n  //           error: \"No movies found with that keyword\"\r\n  //         }\r\n  //       })\r\n  //     }\r\n        \r\n  //   }); \r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search handleSearch={this.handleSearch} />\r\n        {this.state.shows.length > 0 ? <SearchResults searchResults={this.state.shows} handleDetails={this.handleDetails} /> : <p>No</p>}\r\n        <ShowModal ShowModal={this.state.showModal} handleCloseDetails={this.handleCloseDetails} />\r\n      </div>\r\n    )\r\n    // if (this.state.error) {\r\n    //   return (\r\n    //     <p>Error: No movies found</p>\r\n    //   )\r\n    // } else {\r\n    //   return (\r\n    //     <div>\r\n    //       {this.state.shows.length > 0 && this.state.shows.map((showObj) => <p>{showObj.show.name}</p>)}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n// class Counter extends React.Component {\r\n  \r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleReset = this.handleReset.bind(this);\r\n//     this.handleIncrement = this.handleIncrement.bind(this);\r\n//     this.handleDecrement = this.handleDecrement.bind(this);\r\n//     this.state = {\r\n//       count: 0\r\n//     }\r\n//   }\r\n\r\n//   handleIncrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count + 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleDecrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count - 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleReset() {\r\n//     this.setState(() => {\r\n//       return {\r\n//         count: 0\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state)\r\n//     return (\r\n//       <div>\r\n//         <h1>Count:{this.state.count}</h1>\r\n//         <button onClick={this.handleIncrement}>+1</button>\r\n//         <button onClick={this.handleDecrement}>-1</button>\r\n//         <button onClick={this.handleReset}>Reset</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// export default Counter;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Show from './components/Show'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App keyword=\"game thrones\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}