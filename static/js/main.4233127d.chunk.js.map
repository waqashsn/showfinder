{"version":3,"sources":["actions/showsActions.js","components/Search.js","components/Show.js","components/SearchResults.js","components/ShowModal.js","App.js","reportWebVitals.js","reducers/showsReducer.js","index.js","store/configureStore.js"],"names":["getShows","keyword","showsData","type","shows","setError","error","displayShow","showData","show","connect","state","props","className","onSubmit","e","searchKeyword","preventDefault","dispatch","target","elements","search_keyword","value","trim","apiUrl","encodeURI","fetch","then","response","json","searchResults","length","placeholder","name","ownProps","onClick","image","src","medium","alt","genres","map","genre","premiered","status","summary","substr","replace","console","log","result","index","currentShow","showModal","imdbSummaryLink","externals","imdb","style","overlay","backgroundColor","content","height","width","position","margin","padding","boxShadow","border","ariaHideApp","isOpen","onRequestClose","contentLabel","original","href","color","float","fontFamily","textDecoration","runtime","officialSite","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","undefined","loading","showsReducer","action","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4233127d.chunk.js","sourcesContent":["// function to get search results from API and call getShows when done\r\nexport const getShowsAsync = (searchKeyword) => {\r\n    return (dispatch) => {\r\n        // dispatch(setLoading(true));\r\n        const apiUrl = 'https://api.tvmaze.com/search/shows?q=' + encodeURI(searchKeyword);\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((searchResults) => {\r\n                if (searchResults.length > 0) {\r\n                    // console.log(\"Keyword: \", searchKeyword);\r\n                    // console.log(searchResults);\r\n                    dispatch(getShows(searchKeyword, searchResults));\r\n                    // dispatch(setLoading(false));\r\n                } else {\r\n                    dispatch(setError(\"Error: Couldn't get data.\"))\r\n                    // dispatch(setLoading(false));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// action generator to get shows based on keyword \r\nexport const getShows = (keyword, showsData) => {\r\n    return {\r\n        type: \"GET_SHOWS\",\r\n        keyword: keyword,\r\n        shows: showsData\r\n    }\r\n}\r\n\r\nexport const setLoading = (loading) => {\r\n    return {\r\n        type: \"SET_LOADING\",\r\n        loading: loading\r\n    }\r\n}\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: \"SET_ERROR\",\r\n        error: error\r\n    }\r\n}\r\n\r\n// action generator to display a single show modal\r\nexport const displayShow = (showData) => {\r\n    // console.log(\"Running display show on \", showData)\r\n    return {\r\n        type: \"DISPLAY_SHOW\",\r\n        show: showData\r\n    }\r\n}\r\n\r\n// action generator to close show modal\r\nexport const closeShow = () => {\r\n    return {\r\n        type: \"CLOSE_SHOW\"\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getShowsAsync } from '../actions/showsActions';\r\n\r\nconst Search = (props) => {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.dispatch(getShowsAsync(e.target.elements.search_keyword.value.trim()))\r\n            }}>\r\n                <input type=\"text\" placeholder=\"Search...\" name=\"search_keyword\" />\r\n                {/* <button>Search</button> */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        keyword: state.keyword\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n\r\n// class Search extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\r\n\r\n//     }\r\n\r\n//     handleSearchSubmit(e) {\r\n//         e.preventDefault();\r\n//         const keyword = e.target.elements.search_keyword.value.trim();\r\n//         this.props.handleSearch(keyword);\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"input-wrapper\">\r\n//                 <form onSubmit={this.handleSearchSubmit}>\r\n//                     <input type=\"text\" placeholder=\"Search...\" name=\"search_keyword\" />\r\n//                     {/* <button>Search</button> */}\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n\r\n// const Search = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <form>\r\n//                 <input type=\"text\" name=\"search_keyword\" />\r\n//                 <button type=\"submit\" onClick={this.handleSearchSubmit}>Search</button>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { displayShow } from '../actions/showsActions';\r\n\r\nconst Show = (props) => {\r\n    return (\r\n        <div onClick={() => props.dispatch(displayShow(props.show))} className=\"flex_container__item\">\r\n            <div className=\"card\">\r\n                {/* <p>{props.show.name}</p> */}\r\n                <div className=\"card_left\">\r\n                    {props.show.image ? <img src={props.show.image.medium} alt={props.show.name} /> : <span></span>}\r\n\r\n                </div>\r\n                <div className=\"card_right\">\r\n                    <h1>{props.show.name}</h1>\r\n                    <div className=\"card_right__details\">\r\n                        <ul>\r\n                            {props.show.genres.map((genre) => <li key={genre}>{genre}</li>)}\r\n                        </ul>\r\n                        <div className=\"card_right__extradetails\">\r\n                            <ul>\r\n                                <li key=\"premiered\">\r\n                                    Premiered: {props.show.premiered}\r\n                                </li>\r\n                                <li key=\"status\">\r\n                                    Status: {props.show.status}\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"card_right__summary\">\r\n                            {props.show.summary ? <p>{props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\r\n                            <a onClick={() => props.dispatch(displayShow(props.show))}>Details</a>\r\n                        </div>\r\n                        {/* <div className=\"card_right__button\">\r\n                            <a>Details</a>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        show: ownProps.show\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Show);\r\n\r\n// class Show extends React.Component{\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.handleDetailsModal = this.handleDetailsModal.bind(this);\r\n//     }\r\n\r\n//     handleDetailsModal(e){\r\n//         e.preventDefault();\r\n//         this.props.handleDetails(this.props.show)\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//         <div onClick={this.handleDetailsModal} className=\"flex_container__item\">\r\n//             <div className=\"card\">\r\n//                 {/* <p>{props.show.name}</p> */}\r\n//                 <div className=\"card_left\">\r\n//                     {this.props.show.image ? <img src={this.props.show.image.medium} alt={this.props.show.name} /> : <span></span>}\r\n\r\n//                 </div>\r\n//                 <div className=\"card_right\">\r\n//                     <h1>{this.props.show.name}</h1>\r\n//                     <div className=\"card_right__details\">\r\n//                         <ul>\r\n//                             {this.props.show.genres.map((genre)=> <li>{genre}</li>)}\r\n//                         </ul>\r\n//                         <div className=\"card_right__extradetails\">\r\n//                             <ul>\r\n//                                 <li key=\"premiered\">\r\n//                                     Premiered: {this.props.show.premiered}\r\n//                                 </li>\r\n//                                 <li key=\"status\">\r\n//                                     Status: {this.props.show.status}\r\n//                                 </li>\r\n//                             </ul>\r\n\r\n//                         </div>\r\n\r\n//                         <div className=\"card_right__summary\">\r\n//                             { this.props.show.summary ? <p>{this.props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\r\n//                             <a onClick={this.handleDetailsModal}>Details</a>\r\n//                         </div>\r\n//                         {/* <div className=\"card_right__button\">\r\n//                             <a>Details</a>\r\n//                         </div> */}\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n//     }\r\n// }\r\n\r\n// const Show = (props) => {\r\n//     console.log(props.show)\r\n//     return (\r\n//         <div className=\"flex_container__item\">\r\n//             <div className=\"card\">\r\n//                 {/* <p>{props.show.name}</p> */}\r\n//                 <div className=\"card_left\">\r\n//                     {props.show.image ? <img src={props.show.image.medium} alt={props.show.name} /> : <span></span>}\r\n\r\n//                 </div>\r\n//                 <div className=\"card_right\">\r\n//                     <h1>{props.show.name}</h1>\r\n//                     <div className=\"card_right__details\">\r\n//                         <ul>\r\n//                             {props.show.genres.map((genre)=> <li>{genre}</li>)}\r\n//                         </ul>\r\n//                         <div className=\"card_right__extradetails\">\r\n//                             <ul>\r\n//                                 <li>\r\n//                                     Premiered: {props.show.premiered}\r\n//                                 </li>\r\n//                                 <li>\r\n//                                     Status: {props.show.status}\r\n//                                 </li>\r\n//                             </ul>\r\n\r\n//                         </div>\r\n\r\n//                         <div className=\"card_right__summary\">\r\n//                             { props.show.summary ? <p>{props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\r\n//                             <a>Details</a>\r\n//                         </div>\r\n//                         {/* <div className=\"card_right__button\">\r\n//                             <a>Details</a>\r\n//                         </div> */}\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// class Show extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             showId: this.props.showId,\r\n//             title: undefined,\r\n//             summaryTrimmed: undefined,\r\n//             summaryFull: undefined,\r\n//             premiered: undefined,\r\n//             image: {\r\n//                 medium: undefined,\r\n//                 large: undefined\r\n//             },\r\n//             genres: [],\r\n//             runtime: undefined,\r\n//             status: undefined,\r\n//             officialSite: undefined,\r\n//             network: undefined,\r\n\r\n//         }\r\n//     }\r\n\r\n//     getShortSummary(){\r\n//         console.log(this);\r\n//         return this.state.summary.substr(0, 100)\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//        const apiUrl = 'http://api.tvmaze.com/shows/' + this.props.showId;\r\n//        fetch(apiUrl)\r\n//         .then((response )=> response.json())\r\n//         .then((data) =>  {\r\n//             this.setState(() => {\r\n//                 // console.log(data);\r\n//                 return {\r\n//                     title: data.name,\r\n//                     summaryTrimmed: data.summary.substr(0, 240) + \"...\",\r\n//                     summaryFull: data.summary,\r\n//                     premiered: data.premiered,\r\n//                     image: {\r\n//                         medium: data.image.medium,\r\n//                         large: data.image.large\r\n//                     },\r\n//                     genres: data.genres,\r\n//                     runtime: data.runtime,\r\n//                     status: data.status,\r\n//                     officialSite: data.OfficialSite,\r\n//                     network: data.network.name\r\n//                 }\r\n//             })\r\n//         });\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"card\">\r\n//                 <div className=\"card_left\">\r\n//                     <img src={this.state.image.medium} alt={this.state.title} />\r\n//                 </div>\r\n//                 <div className=\"card_right\">\r\n//                     <h1>{this.state.title}</h1>\r\n//                     <div className=\"card_right__details\">\r\n//                         <ul>\r\n//                             {this.state.genres.map((genre)=> <li>{genre}</li>)}\r\n//                         </ul>\r\n//                         <div className=\"card_right__extradetails\">\r\n//                             <ul>\r\n//                                 <li>\r\n//                                     Premiered: {this.state.premiered}\r\n//                                 </li>\r\n//                                 <li>\r\n//                                     Status: {this.state.status}\r\n//                                 </li>\r\n//                             </ul>\r\n\r\n//                         </div>\r\n\r\n//                         <div className=\"card_right__summary\">\r\n//                             <p>{this.state.summaryTrimmed}</p>\r\n//                         </div>\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Show;","import Show from './Show';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SearchResults = (props) => {\r\n    console.log(props.searchResults)\r\n    return (\r\n        <div className=\"flex_container\">\r\n            {\r\n                props.searchResults.map((result, index) => {\r\n                    {/* return <p>{result.show.name}</p> */ }\r\n                    return <Show key={index} show={result.show} />\r\n                    {/* return <Show key={index} show={result.show} handleDetails={() => props.dispatch(displayShow(result.show))} handleCloseDetails={props.dispatch(closeShow())} /> */ }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchResults: state.shows\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchResults);","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport { closeShow } from '../actions/showsActions';\r\n\r\nconst ShowModal = (props) => {\r\n\r\n    const modalStyles = {\r\n        overlay: {\r\n            backgroundColor: 'rgba(222, 222, 222, 0.8)'\r\n        },\r\n        content: {\r\n            backgroundColor: '',\r\n            height: '400px',\r\n            width: '800px',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            padding: '0',\r\n            boxShadow: '0px 20px 30px 3px rgba(0, 0, 0, 0.55)',\r\n            border: 'none'\r\n\r\n        }\r\n    }\r\n\r\n    const closeButtonStyles = {\r\n        color: 'gray',\r\n        float: 'right',\r\n        padding: '10px',\r\n        fontFamily: 'sans-serif',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n    if (!props.currentShow) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        const imdbSummaryLink = `http://www.imdb.com/title/${props.currentShow.externals.imdb}/plotsummary` || 'http://www.imdb.com';\r\n        return (\r\n\r\n            <div>\r\n                <Modal style={modalStyles} ariaHideApp={false} isOpen={!!props.currentShow} onRequestClose={() => props.dispatch(closeShow())} contentLabel=\"Selected Show\">\r\n                    <div className='largecard'>\r\n                        <div className='largecard_left'>\r\n                            <img src={props.currentShow.image.original} />\r\n                        </div>\r\n                        <div className='largecard_right'>\r\n                            <a href=\"#\" onClick={() => props.dispatch(closeShow())} style={closeButtonStyles}>X</a>\r\n                            <h1>{props.currentShow.name}</h1>\r\n                            <div className='largecard_right__details'>\r\n                                <ul>\r\n                                    <li key=\"premiered\">Premiered: {props.currentShow.premiered}</li>\r\n                                    <li key=\"runtime\">{props.currentShow.runtime} min</li>\r\n                                    <li key=\"status\">{props.currentShow.status}</li>\r\n                                </ul>\r\n\r\n                                <div className='largecard_right__review'>\r\n                                    <p>{props.currentShow.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")}</p>\r\n                                    <a href={imdbSummaryLink} target='_blank'>Read more</a>\r\n                                </div>\r\n                                <div>\r\n                                    {/* <p>Genres:</p> */}\r\n                                    <ul>\r\n                                        {props.currentShow.genres.map((genre) => <li key={genre}>{genre}</li>)}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='largecard_right__button'>\r\n                                    {!!props.currentShow.officialSite ? <a href={props.currentShow.officialSite} target='_blank'>Official Website</a> : <span></span>}\r\n                                    <a href={props.currentShow.url} target='_blank'>Full Details</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <button onClick={props.handleCloseDetails}>Close</button> */}\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentShow: state.showModal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShowModal);","import React from 'react';\r\nimport Search from './components/Search';\r\nimport Show from './components/Show';\r\nimport SearchResults from './components/SearchResults';\r\nimport ShowModal from './components/ShowModal';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div>\r\n      <Search />\r\n      {/* <SearchResults /> */}\r\n      {props.shows.length > 0 ? <SearchResults /> : <p>No</p>}\r\n      <ShowModal />\r\n      {/* <ShowModal ShowModal={this.state.showModal} handleCloseDetails={this.handleCloseDetails} /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n// class App extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleSearch = this.handleSearch.bind(this);\r\n//     this.handleDetails = this.handleDetails.bind(this);\r\n//     this.handleCloseDetails = this.handleCloseDetails.bind(this);\r\n//     this.state = {\r\n//       keyword: undefined,\r\n//       shows: [],\r\n//       error: undefined,\r\n//       showModal: undefined\r\n\r\n//     }\r\n//   }\r\n\r\n//   handleSearch(searchKeyword) {\r\n//     const apiUrl = 'https://api.tvmaze.com/search/shows?q=' + encodeURI(searchKeyword);\r\n//     fetch(apiUrl)\r\n//       .then((response) => response.json())\r\n//       .then((searchResults) => {\r\n//         if (searchResults.length > 0) {\r\n//           console.log(\"Keyword: \", searchKeyword);\r\n//           console.log(searchResults);\r\n//           this.setState(() => {\r\n//             return {\r\n//               keyword: searchKeyword,\r\n//               shows: searchResults\r\n//             }\r\n//           })\r\n//         }\r\n//       })\r\n//   }\r\n\r\n//   handleDetails(showdata) {\r\n//     console.log(showdata);\r\n//     if (!!showdata) {\r\n//       this.setState(() => {\r\n//         return {\r\n//           showModal: showdata\r\n//         }\r\n//       })\r\n//     }\r\n\r\n//   }\r\n\r\n//   handleCloseDetails() {\r\n//     this.setState(() => {\r\n//       return {\r\n//         showModal: undefined\r\n//       }\r\n//     })\r\n//   }\r\n\r\n\r\n//   // componentDidMount() {\r\n//   //   const apiUrl = 'http://api.tvmaze.com/search/shows?q=' + encodeURI(this.state.keyword);\r\n//   //   fetch(apiUrl)\r\n//   //   .then((response )=> response.json())\r\n//   //   .then((searchResults) =>  {\r\n//   //     if(searchResults.length > 0){\r\n//   //       this.setState(() => {\r\n//   //           console.log(\"KEYWORD: \", encodeURI(this.state.keyword));\r\n//   //           console.log(searchResults);\r\n//   //           return {\r\n//   //             shows: searchResults\r\n//   //           }\r\n//   //       })\r\n\r\n//   //     } else {\r\n//   //       this.setState(() => {\r\n//   //         return {\r\n//   //           error: \"No movies found with that keyword\"\r\n//   //         }\r\n//   //       })\r\n//   //     }\r\n\r\n//   //   }); \r\n//   // }\r\n\r\n//   render() {\r\n//     // const state = store.getState()\r\n//     // console.log(state.shows.length)\r\n//     return (\r\n//       <div>\r\n//         <Search />\r\n//         <SearchResults />\r\n//         {/* {state.shows.length > 0 ? <SearchResults /> : <p>No</p>} */}\r\n//         <ShowModal ShowModal={this.state.showModal} handleCloseDetails={this.handleCloseDetails} />\r\n//       </div>\r\n//     )\r\n//     // if (this.state.error) {\r\n//     //   return (\r\n//     //     <p>Error: No movies found</p>\r\n//     //   )\r\n//     // } else {\r\n//     //   return (\r\n//     //     <div>\r\n//     //       {this.state.shows.length > 0 && this.state.shows.map((showObj) => <p>{showObj.show.name}</p>)}\r\n//     //     </div>\r\n//     //   );\r\n//     // }\r\n//   }\r\n\r\n// }\r\n\r\n// export default App;\r\n\r\n// class Counter extends React.Component {\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleReset = this.handleReset.bind(this);\r\n//     this.handleIncrement = this.handleIncrement.bind(this);\r\n//     this.handleDecrement = this.handleDecrement.bind(this);\r\n//     this.state = {\r\n//       count: 0\r\n//     }\r\n//   }\r\n\r\n//   handleIncrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count + 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleDecrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count - 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleReset() {\r\n//     this.setState(() => {\r\n//       return {\r\n//         count: 0\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state)\r\n//     return (\r\n//       <div>\r\n//         <h1>Count:{this.state.count}</h1>\r\n//         <button onClick={this.handleIncrement}>+1</button>\r\n//         <button onClick={this.handleDecrement}>-1</button>\r\n//         <button onClick={this.handleReset}>Reset</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// export default Counter;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// default state\r\nconst defaultState = {\r\n    keyword: undefined,\r\n    shows: [],\r\n    showModal: undefined,\r\n    loading: false,\r\n    error: undefined,\r\n\r\n}\r\n\r\n// reducer to handle show actions\r\nexport const showsReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_SHOWS\":\r\n            return {\r\n                ...state,\r\n                keyword: action.keyword,\r\n                shows: action.shows\r\n            }\r\n        case \"DISPLAY_SHOW\":\r\n            return {\r\n                ...state,\r\n                showModal: action.show\r\n            }\r\n        case \"CLOSE_SHOW\":\r\n            return {\r\n                ...state,\r\n                showModal: undefined\r\n            }\r\n        case \"SET_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n// import Show from './components/Show'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { configureStore } from './store/configureStore';\r\n// import { getShowsAsync, displayShow, closeShow, setError } from './actions/showsActions';\r\nconst store = configureStore();\r\nstore.subscribe(() => {\r\n  console.log(store.getState());\r\n})\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App keyword=\"game thrones\" />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// store.dispatch(getShowsAsync('x files'));\r\n// store.dispatch(getShowsAsync('news'));\r\n// store.dispatch(displayShow({ showId: \"X files\" }));\r\n// store.dispatch(setError(\"this is error\"))\r\n// store.dispatch(closeShow());\r\n// store.dispatch(getShowsAsync('bbc'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { showsReducer } from '../reducers/showsReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(showsReducer, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n\r\n\r\n"],"sourceRoot":""}