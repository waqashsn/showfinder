{"version":3,"sources":["components/Search.js","components/Show.js","components/SearchResults.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","handleSearchSubmit","bind","e","preventDefault","keyword","target","elements","search_keyword","value","trim","this","handleSearch","className","onSubmit","type","placeholder","name","React","Component","Show","console","log","show","image","src","medium","alt","genres","map","genre","premiered","status","summary","substr","replace","SearchResults","searchResults","result","index","App","state","undefined","shows","error","searchKeyword","apiUrl","encodeURI","fetch","then","response","json","length","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA0CeA,E,kDAvCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAFX,E,+DAMAC,GACfA,EAAEC,iBACF,IAAMC,EAAUF,EAAEG,OAAOC,SAASC,eAAeC,MAAMC,OACvDC,KAAKX,MAAMY,aAAaP,K,+BAIxB,OACI,qBAAKQ,UAAU,gBAAf,SACI,sBAAMC,SAAUH,KAAKV,mBAArB,SACI,uBAAOc,KAAK,OAAOC,YAAY,YAAYC,KAAK,2B,GAjB/CC,IAAMC,WCiIZC,EAjIF,SAACpB,GAEV,OADAqB,QAAQC,IAAItB,EAAMuB,MAEd,qBAAKV,UAAU,uBAAf,SACI,sBAAKA,UAAU,OAAf,UAEI,qBAAKA,UAAU,YAAf,SACKb,EAAMuB,KAAKC,MAAQ,qBAAKC,IAAKzB,EAAMuB,KAAKC,MAAME,OAAQC,IAAK3B,EAAMuB,KAAKN,OAAW,2BAGtF,sBAAKJ,UAAU,aAAf,UACI,6BAAKb,EAAMuB,KAAKN,OAChB,sBAAKJ,UAAU,sBAAf,UACI,6BACKb,EAAMuB,KAAKK,OAAOC,KAAI,SAACC,GAAD,OAAU,6BAAKA,SAE1C,qBAAKjB,UAAU,2BAAf,SACI,+BACI,6CACgBb,EAAMuB,KAAKQ,aAE3B,0CACa/B,EAAMuB,KAAKS,eAMhC,qBAAKnB,UAAU,sBAAf,SACMb,EAAMuB,KAAKU,QAAU,8BAAIjC,EAAMuB,KAAKU,QAAQC,OAAO,EAAG,KAAKC,QAAQ,kBAAmB,IAAjE,UAAgF,oEChBpHC,EAbO,SAACpC,GACnB,OACI,qBAAKa,UAAU,iBAAf,SAEQb,EAAMqC,cAAcR,KAAI,SAACS,EAAQC,GAE7B,OAAO,cAAC,EAAD,CAAkBhB,KAAMe,EAAOf,MAApBgB,SC2EvBC,E,kDA7Eb,WAAYxC,GAAO,IAAD,8BAChB,cAAMA,IACDY,aAAe,EAAKA,aAAaV,KAAlB,gBACpB,EAAKuC,MAAQ,CACXpC,aAASqC,EACTC,MAAO,GACPC,WAAOF,GANO,E,yDAWLG,GAAgB,IAAD,OACpBC,EAAS,wCAA0CC,UAAUF,GACnEG,MAAMF,GACLG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACZ,GACFA,EAAce,OAAS,IACxB/B,QAAQC,IAAI,YAAauB,GACzBxB,QAAQC,IAAIe,GACZ,EAAKgB,UAAS,WACZ,MAAO,CACHhD,QAASwC,EACTF,MAAON,Y,+BAkCjB,OACE,gCACE,cAAC,EAAD,CAAQzB,aAAcD,KAAKC,eAC1BD,KAAK8B,MAAME,MAAMS,OAAS,EAAI,cAAC,EAAD,CAAef,cAAe1B,KAAK8B,MAAME,QAAY,0C,GA5D1EzB,IAAMC,WCOTmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK3D,QAAQ,mBAEf4D,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66567dcc.chunk.js","sourcesContent":["import React from 'react';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        \n    }\n\n    handleSearchSubmit(e) {\n        e.preventDefault();\n        const keyword = e.target.elements.search_keyword.value.trim();\n        this.props.handleSearch(keyword);\n    }\n\n    render() {\n        return (\n            <div className=\"input-wrapper\">\n                <form onSubmit={this.handleSearchSubmit}>\n                    <input type=\"text\" placeholder=\"Search...\" name=\"search_keyword\" />\n                    {/* <button>Search</button> */}\n                </form>\n            </div>\n        );\n    }\n\n}\n\n\n\n// const Search = (props) => {\n//     return (\n//         <div>\n//             <form>\n//                 <input type=\"text\" name=\"search_keyword\" />\n//                 <button type=\"submit\" onClick={this.handleSearchSubmit}>Search</button>\n//             </form>\n//         </div>\n//     )\n// }\n\n\nexport default Search;","// import React from 'react';\n\nconst Show = (props) => {\n    console.log(props.show)\n    return (\n        <div className=\"flex_container__item\">\n            <div className=\"card\">\n                {/* <p>{props.show.name}</p> */}\n                <div className=\"card_left\">\n                    {props.show.image ? <img src={props.show.image.medium} alt={props.show.name} /> : <span></span>}\n                    \n                </div>\n                <div className=\"card_right\">\n                    <h1>{props.show.name}</h1>\n                    <div className=\"card_right__details\">\n                        <ul>\n                            {props.show.genres.map((genre)=> <li>{genre}</li>)}\n                        </ul>\n                        <div className=\"card_right__extradetails\">\n                            <ul>\n                                <li>\n                                    Premiered: {props.show.premiered}\n                                </li>\n                                <li>\n                                    Status: {props.show.status}\n                                </li>\n                            </ul>\n\n                        </div>\n                        \n                        <div className=\"card_right__summary\">\n                            { props.show.summary ? <p>{props.show.summary.substr(0, 220).replace(/<\\/?[^>]+(>|$)/g, \"\")} ...</p> : <p>No summary available.</p>}\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// class Show extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             showId: this.props.showId,\n//             title: undefined,\n//             summaryTrimmed: undefined,\n//             summaryFull: undefined,\n//             premiered: undefined,\n//             image: {\n//                 medium: undefined,\n//                 large: undefined\n//             },\n//             genres: [],\n//             runtime: undefined,\n//             status: undefined,\n//             officialSite: undefined,\n//             network: undefined,\n            \n//         }\n//     }\n\n//     getShortSummary(){\n//         console.log(this);\n//         return this.state.summary.substr(0, 100)\n//     }\n\n//     componentDidMount() {\n//        const apiUrl = 'http://api.tvmaze.com/shows/' + this.props.showId;\n//        fetch(apiUrl)\n//         .then((response )=> response.json())\n//         .then((data) =>  {\n//             this.setState(() => {\n//                 // console.log(data);\n//                 return {\n//                     title: data.name,\n//                     summaryTrimmed: data.summary.substr(0, 240) + \"...\",\n//                     summaryFull: data.summary,\n//                     premiered: data.premiered,\n//                     image: {\n//                         medium: data.image.medium,\n//                         large: data.image.large\n//                     },\n//                     genres: data.genres,\n//                     runtime: data.runtime,\n//                     status: data.status,\n//                     officialSite: data.OfficialSite,\n//                     network: data.network.name\n//                 }\n//             })\n//         });\n\n//     }\n\n//     render() {\n//         return (\n//             <div className=\"card\">\n//                 <div className=\"card_left\">\n//                     <img src={this.state.image.medium} alt={this.state.title} />\n//                 </div>\n//                 <div className=\"card_right\">\n//                     <h1>{this.state.title}</h1>\n//                     <div className=\"card_right__details\">\n//                         <ul>\n//                             {this.state.genres.map((genre)=> <li>{genre}</li>)}\n//                         </ul>\n//                         <div className=\"card_right__extradetails\">\n//                             <ul>\n//                                 <li>\n//                                     Premiered: {this.state.premiered}\n//                                 </li>\n//                                 <li>\n//                                     Status: {this.state.status}\n//                                 </li>\n//                             </ul>\n\n//                         </div>\n                        \n//                         <div className=\"card_right__summary\">\n//                             <p>{this.state.summaryTrimmed}</p>\n//                         </div>\n                        \n//                     </div>\n//                 </div>\n//             </div>\n\n//         );\n//     }\n// }\n\nexport default Show;","import Show from './Show';\n\nconst SearchResults = (props) => {\n    return (\n        <div className=\"flex_container\">\n            {\n                props.searchResults.map((result, index) => {\n                    {/* return <p>{result.show.name}</p> */}\n                    return <Show key={index} show={result.show} />\n                })\n            }\n        </div>\n    )\n}\n\nexport default SearchResults;","import React from 'react';\r\nimport Search from './components/Search';\r\nimport Show from './components/Show';\r\nimport SearchResults from './components/SearchResults';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.state = {\r\n      keyword: undefined,\r\n      shows: [],\r\n      error: undefined\r\n      \r\n    }\r\n  }\r\n\r\n  handleSearch(searchKeyword) {\r\n    const apiUrl = 'http://api.tvmaze.com/search/shows?q=' + encodeURI(searchKeyword);\r\n    fetch(apiUrl)\r\n    .then((response) => response.json())\r\n    .then((searchResults) => {\r\n      if(searchResults.length > 0){\r\n        console.log(\"Keyword: \", searchKeyword);\r\n        console.log(searchResults);\r\n        this.setState(() => {\r\n          return {\r\n              keyword: searchKeyword,\r\n              shows: searchResults\r\n            }\r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n\r\n  // componentDidMount() {\r\n  //   const apiUrl = 'http://api.tvmaze.com/search/shows?q=' + encodeURI(this.state.keyword);\r\n  //   fetch(apiUrl)\r\n  //   .then((response )=> response.json())\r\n  //   .then((searchResults) =>  {\r\n  //     if(searchResults.length > 0){\r\n  //       this.setState(() => {\r\n  //           console.log(\"KEYWORD: \", encodeURI(this.state.keyword));\r\n  //           console.log(searchResults);\r\n  //           return {\r\n  //             shows: searchResults\r\n  //           }\r\n  //       })\r\n\r\n  //     } else {\r\n  //       this.setState(() => {\r\n  //         return {\r\n  //           error: \"No movies found with that keyword\"\r\n  //         }\r\n  //       })\r\n  //     }\r\n        \r\n  //   }); \r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search handleSearch={this.handleSearch} />\r\n        {this.state.shows.length > 0 ? <SearchResults searchResults={this.state.shows} /> : <p>No</p>}\r\n      </div>\r\n    )\r\n    // if (this.state.error) {\r\n    //   return (\r\n    //     <p>Error: No movies found</p>\r\n    //   )\r\n    // } else {\r\n    //   return (\r\n    //     <div>\r\n    //       {this.state.shows.length > 0 && this.state.shows.map((showObj) => <p>{showObj.show.name}</p>)}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n// class Counter extends React.Component {\r\n  \r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleReset = this.handleReset.bind(this);\r\n//     this.handleIncrement = this.handleIncrement.bind(this);\r\n//     this.handleDecrement = this.handleDecrement.bind(this);\r\n//     this.state = {\r\n//       count: 0\r\n//     }\r\n//   }\r\n\r\n//   handleIncrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count + 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleDecrement() {\r\n//     this.setState((preState)=>{\r\n//       return {\r\n//         count: preState.count - 1\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handleReset() {\r\n//     this.setState(() => {\r\n//       return {\r\n//         count: 0\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state)\r\n//     return (\r\n//       <div>\r\n//         <h1>Count:{this.state.count}</h1>\r\n//         <button onClick={this.handleIncrement}>+1</button>\r\n//         <button onClick={this.handleDecrement}>-1</button>\r\n//         <button onClick={this.handleReset}>Reset</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// export default Counter;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Show from './components/Show'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App keyword=\"game thrones\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}